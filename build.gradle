buildscript {
    ext {
        versionSpringBoot = '1.3.5.RELEASE'
        versionDepManagementPlugin = '0.5.7.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "http://repo1.maven.org/maven2"
        }
    }
    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:$versionSpringBoot")
        classpath "io.spring.gradle:dependency-management-plugin:$versionDepManagementPlugin"
    }
}

subprojects {
    ext {
        artifactId = project.name

        versionGroovy = '2.4.7'
        versionLombok = '1.16.8'
        versionCglib = '3.2.2'
        versionGuava = '19.0'
        versionSpock = '1.0-groovy-2.4'
        versionJsoup = '1.9.2'
        versionReactorCore = '2.5.0.M4'
        versionRxJava = '1.1.5'
    }

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: "maven-publish"
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:$versionSpringBoot"
        }
    }

    dependencies {
        compile "org.projectlombok:lombok:$versionLombok"
        compile 'org.springframework.boot:spring-boot-starter-logging'
        compile "io.projectreactor:reactor-core:$versionReactorCore"
        compile "io.reactivex:rxjava:$versionRxJava"
        compile "com.google.guava:guava:$versionGuava"

        testCompile("org.codehaus.groovy:groovy-all:$versionGroovy")
        testCompile("org.spockframework:spock-core:$versionSpock")
    }

    configurations.all {
        exclude group: 'commons-logging'
        exclude group: 'xerces'
        exclude group: 'xml-apis'
        exclude group: 'asm'

        resolutionStrategy {
            try {
                eachDependency { DependencyResolveDetails details ->
                    if (details.requested.group == 'org.apache.commons') {
                        if (details.requested.name == 'commons-io') {
                            details.requested.group = 'commons-io'
                        }
                    }
                }
            } catch (all) {
                // ignore
            }
        }
    }

    test {
        maxParallelForks = 3
        forkEvery = 50
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

apply plugin: 'idea'

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
